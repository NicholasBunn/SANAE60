// Code generated by protoc-gen-go. DO NOT EDIT.
// source: estimateService/proto/estimateAPI.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ModelTypeEnum int32

const (
	ModelTypeEnum_UNKNOWN   ModelTypeEnum = 0
	ModelTypeEnum_OPENWATER ModelTypeEnum = 1
	ModelTypeEnum_ICE       ModelTypeEnum = 2
)

var ModelTypeEnum_name = map[int32]string{
	0: "UNKNOWN",
	1: "OPENWATER",
	2: "ICE",
}

var ModelTypeEnum_value = map[string]int32{
	"UNKNOWN":   0,
	"OPENWATER": 1,
	"ICE":       2,
}

func (x ModelTypeEnum) String() string {
	return proto.EnumName(ModelTypeEnum_name, int32(x))
}

func (ModelTypeEnum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_afc4875b92654bbc, []int{0}
}

type EstimateRequestMessage struct {
	PortPropMotorSpeed    []float32     `protobuf:"fixed32,1,rep,packed,name=port_prop_motor_speed,json=portPropMotorSpeed,proto3" json:"port_prop_motor_speed,omitempty"`
	StbdPropMotorSpeed    []float32     `protobuf:"fixed32,2,rep,packed,name=stbd_prop_motor_speed,json=stbdPropMotorSpeed,proto3" json:"stbd_prop_motor_speed,omitempty"`
	PropellerPitchPort    []float32     `protobuf:"fixed32,3,rep,packed,name=propeller_pitch_port,json=propellerPitchPort,proto3" json:"propeller_pitch_port,omitempty"`
	PropellerPitchStbd    []float32     `protobuf:"fixed32,4,rep,packed,name=propeller_pitch_stbd,json=propellerPitchStbd,proto3" json:"propeller_pitch_stbd,omitempty"`
	Sog                   []float32     `protobuf:"fixed32,5,rep,packed,name=sog,proto3" json:"sog,omitempty"`
	WindDirectionRelative []float32     `protobuf:"fixed32,6,rep,packed,name=wind_direction_relative,json=windDirectionRelative,proto3" json:"wind_direction_relative,omitempty"`
	WindSpeed             []float32     `protobuf:"fixed32,7,rep,packed,name=wind_speed,json=windSpeed,proto3" json:"wind_speed,omitempty"`
	BeaufortNumber        []float32     `protobuf:"fixed32,8,rep,packed,name=beaufort_number,json=beaufortNumber,proto3" json:"beaufort_number,omitempty"`
	WaveDirection         []float32     `protobuf:"fixed32,9,rep,packed,name=wave_direction,json=waveDirection,proto3" json:"wave_direction,omitempty"`
	WaveLength            []float32     `protobuf:"fixed32,10,rep,packed,name=wave_length,json=waveLength,proto3" json:"wave_length,omitempty"`
	MotorPowerPort        []float32     `protobuf:"fixed32,11,rep,packed,name=motor_power_port,json=motorPowerPort,proto3" json:"motor_power_port,omitempty"`
	MotorPowerStbd        []float32     `protobuf:"fixed32,12,rep,packed,name=motor_power_stbd,json=motorPowerStbd,proto3" json:"motor_power_stbd,omitempty"`
	OriginalSog           []float32     `protobuf:"fixed32,13,rep,packed,name=original_sog,json=originalSog,proto3" json:"original_sog,omitempty"`
	ModelType             ModelTypeEnum `protobuf:"varint,14,opt,name=model_type,json=modelType,proto3,enum=estimate.ModelTypeEnum" json:"model_type,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}      `json:"-"`
	XXX_unrecognized      []byte        `json:"-"`
	XXX_sizecache         int32         `json:"-"`
}

func (m *EstimateRequestMessage) Reset()         { *m = EstimateRequestMessage{} }
func (m *EstimateRequestMessage) String() string { return proto.CompactTextString(m) }
func (*EstimateRequestMessage) ProtoMessage()    {}
func (*EstimateRequestMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_afc4875b92654bbc, []int{0}
}

func (m *EstimateRequestMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EstimateRequestMessage.Unmarshal(m, b)
}
func (m *EstimateRequestMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EstimateRequestMessage.Marshal(b, m, deterministic)
}
func (m *EstimateRequestMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EstimateRequestMessage.Merge(m, src)
}
func (m *EstimateRequestMessage) XXX_Size() int {
	return xxx_messageInfo_EstimateRequestMessage.Size(m)
}
func (m *EstimateRequestMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_EstimateRequestMessage.DiscardUnknown(m)
}

var xxx_messageInfo_EstimateRequestMessage proto.InternalMessageInfo

func (m *EstimateRequestMessage) GetPortPropMotorSpeed() []float32 {
	if m != nil {
		return m.PortPropMotorSpeed
	}
	return nil
}

func (m *EstimateRequestMessage) GetStbdPropMotorSpeed() []float32 {
	if m != nil {
		return m.StbdPropMotorSpeed
	}
	return nil
}

func (m *EstimateRequestMessage) GetPropellerPitchPort() []float32 {
	if m != nil {
		return m.PropellerPitchPort
	}
	return nil
}

func (m *EstimateRequestMessage) GetPropellerPitchStbd() []float32 {
	if m != nil {
		return m.PropellerPitchStbd
	}
	return nil
}

func (m *EstimateRequestMessage) GetSog() []float32 {
	if m != nil {
		return m.Sog
	}
	return nil
}

func (m *EstimateRequestMessage) GetWindDirectionRelative() []float32 {
	if m != nil {
		return m.WindDirectionRelative
	}
	return nil
}

func (m *EstimateRequestMessage) GetWindSpeed() []float32 {
	if m != nil {
		return m.WindSpeed
	}
	return nil
}

func (m *EstimateRequestMessage) GetBeaufortNumber() []float32 {
	if m != nil {
		return m.BeaufortNumber
	}
	return nil
}

func (m *EstimateRequestMessage) GetWaveDirection() []float32 {
	if m != nil {
		return m.WaveDirection
	}
	return nil
}

func (m *EstimateRequestMessage) GetWaveLength() []float32 {
	if m != nil {
		return m.WaveLength
	}
	return nil
}

func (m *EstimateRequestMessage) GetMotorPowerPort() []float32 {
	if m != nil {
		return m.MotorPowerPort
	}
	return nil
}

func (m *EstimateRequestMessage) GetMotorPowerStbd() []float32 {
	if m != nil {
		return m.MotorPowerStbd
	}
	return nil
}

func (m *EstimateRequestMessage) GetOriginalSog() []float32 {
	if m != nil {
		return m.OriginalSog
	}
	return nil
}

func (m *EstimateRequestMessage) GetModelType() ModelTypeEnum {
	if m != nil {
		return m.ModelType
	}
	return ModelTypeEnum_UNKNOWN
}

type EstimateResponseMessage struct {
	PowerEstimate        []float32 `protobuf:"fixed32,1,rep,packed,name=power_estimate,json=powerEstimate,proto3" json:"power_estimate,omitempty"`
	PowerActual          []float32 `protobuf:"fixed32,2,rep,packed,name=power_actual,json=powerActual,proto3" json:"power_actual,omitempty"`
	SpeedOverGround      []float32 `protobuf:"fixed32,3,rep,packed,name=speed_over_ground,json=speedOverGround,proto3" json:"speed_over_ground,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *EstimateResponseMessage) Reset()         { *m = EstimateResponseMessage{} }
func (m *EstimateResponseMessage) String() string { return proto.CompactTextString(m) }
func (*EstimateResponseMessage) ProtoMessage()    {}
func (*EstimateResponseMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_afc4875b92654bbc, []int{1}
}

func (m *EstimateResponseMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EstimateResponseMessage.Unmarshal(m, b)
}
func (m *EstimateResponseMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EstimateResponseMessage.Marshal(b, m, deterministic)
}
func (m *EstimateResponseMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EstimateResponseMessage.Merge(m, src)
}
func (m *EstimateResponseMessage) XXX_Size() int {
	return xxx_messageInfo_EstimateResponseMessage.Size(m)
}
func (m *EstimateResponseMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_EstimateResponseMessage.DiscardUnknown(m)
}

var xxx_messageInfo_EstimateResponseMessage proto.InternalMessageInfo

func (m *EstimateResponseMessage) GetPowerEstimate() []float32 {
	if m != nil {
		return m.PowerEstimate
	}
	return nil
}

func (m *EstimateResponseMessage) GetPowerActual() []float32 {
	if m != nil {
		return m.PowerActual
	}
	return nil
}

func (m *EstimateResponseMessage) GetSpeedOverGround() []float32 {
	if m != nil {
		return m.SpeedOverGround
	}
	return nil
}

func init() {
	proto.RegisterEnum("estimate.ModelTypeEnum", ModelTypeEnum_name, ModelTypeEnum_value)
	proto.RegisterType((*EstimateRequestMessage)(nil), "estimate.EstimateRequestMessage")
	proto.RegisterType((*EstimateResponseMessage)(nil), "estimate.EstimateResponseMessage")
}

func init() {
	proto.RegisterFile("estimateService/proto/estimateAPI.proto", fileDescriptor_afc4875b92654bbc)
}

var fileDescriptor_afc4875b92654bbc = []byte{
	// 566 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x93, 0x51, 0x6f, 0xd3, 0x30,
	0x14, 0x85, 0xe9, 0x3a, 0xb6, 0xf5, 0x76, 0xe9, 0x8a, 0xb5, 0xb1, 0x08, 0x09, 0xb1, 0x4d, 0x9a,
	0x36, 0xed, 0xa1, 0x81, 0x81, 0x78, 0x40, 0xbc, 0x0c, 0x56, 0xa1, 0x09, 0xd6, 0x45, 0xed, 0xd0,
	0x24, 0x78, 0x88, 0x9c, 0xe4, 0x2e, 0x8d, 0x94, 0xc4, 0xc1, 0x76, 0x3a, 0xed, 0x57, 0xf0, 0x43,
	0xf9, 0x13, 0xc8, 0x37, 0x31, 0x55, 0x4b, 0x9f, 0xda, 0x7c, 0xe7, 0x1c, 0xdb, 0x39, 0xb9, 0x86,
	0x13, 0x54, 0x3a, 0xcd, 0xb9, 0xc6, 0x09, 0xca, 0x59, 0x1a, 0xa1, 0x57, 0x4a, 0xa1, 0x85, 0x67,
	0xe9, 0x85, 0x7f, 0x35, 0x20, 0xc2, 0xb6, 0x2c, 0x3a, 0xfa, 0xb3, 0x0e, 0xcf, 0x87, 0xcd, 0xc3,
	0x18, 0x7f, 0x55, 0xa8, 0xf4, 0x35, 0x2a, 0xc5, 0x13, 0x64, 0x6f, 0x60, 0xaf, 0x14, 0x52, 0x07,
	0xa5, 0x14, 0x65, 0x90, 0x0b, 0x2d, 0x64, 0xa0, 0x4a, 0xc4, 0xd8, 0x6d, 0x1d, 0xb4, 0x4f, 0xd7,
	0xc6, 0xcc, 0x88, 0xbe, 0x14, 0xe5, 0xb5, 0x91, 0x26, 0x46, 0x31, 0x11, 0xa5, 0xc3, 0xf8, 0xff,
	0xc8, 0x5a, 0x1d, 0x31, 0xe2, 0x52, 0xe4, 0x35, 0xec, 0x1a, 0x37, 0x66, 0x19, 0xca, 0xa0, 0x4c,
	0x75, 0x34, 0x0d, 0xcc, 0xc2, 0x6e, 0xbb, 0xd9, 0xc4, 0x6a, 0xbe, 0x91, 0x7c, 0x21, 0xf5, 0xaa,
	0x84, 0x59, 0xd7, 0x5d, 0x5f, 0x95, 0x98, 0xe8, 0x30, 0x66, 0x7d, 0x68, 0x2b, 0x91, 0xb8, 0x4f,
	0xc9, 0x60, 0xfe, 0xb2, 0xf7, 0xb0, 0xff, 0x90, 0x16, 0x71, 0x10, 0xa7, 0x12, 0x23, 0x9d, 0x8a,
	0x22, 0x90, 0x98, 0x71, 0x9d, 0xce, 0xd0, 0xdd, 0x20, 0xd7, 0x9e, 0x91, 0x2f, 0xad, 0x3a, 0x6e,
	0x44, 0xf6, 0x12, 0x80, 0x72, 0xf5, 0x5b, 0x6d, 0x92, 0xb5, 0x63, 0x48, 0xfd, 0x32, 0x27, 0xb0,
	0x13, 0x22, 0xaf, 0xee, 0x4d, 0x6d, 0x45, 0x95, 0x87, 0x28, 0xdd, 0x2d, 0xf2, 0xf4, 0x2c, 0x1e,
	0x11, 0x65, 0xc7, 0xd0, 0x7b, 0xe0, 0x33, 0x9c, 0xef, 0xef, 0x76, 0xc8, 0xe7, 0x18, 0xfa, 0x6f,
	0x5b, 0xf6, 0x0a, 0xba, 0x64, 0xcb, 0xb0, 0x48, 0xf4, 0xd4, 0x05, 0xf2, 0x80, 0x41, 0xdf, 0x88,
	0xb0, 0x53, 0xe8, 0xd7, 0x35, 0x97, 0xe2, 0xc1, 0xb4, 0x61, 0x9a, 0xeb, 0xd6, 0x3b, 0x12, 0xf7,
	0x0d, 0xa6, 0xd6, 0x96, 0x9c, 0xd4, 0xd8, 0xf6, 0xb2, 0x93, 0xda, 0x3a, 0x84, 0x6d, 0x21, 0xd3,
	0x24, 0x2d, 0x78, 0x16, 0x98, 0xda, 0x1c, 0x72, 0x75, 0x2d, 0x9b, 0x50, 0x7d, 0x90, 0x8b, 0x18,
	0xb3, 0x40, 0x3f, 0x96, 0xe8, 0xf6, 0x0e, 0x5a, 0xa7, 0xbd, 0xf3, 0xfd, 0x81, 0x1d, 0xaa, 0xc1,
	0xb5, 0xd1, 0x6e, 0x1f, 0x4b, 0x1c, 0x16, 0x55, 0x3e, 0xee, 0xe4, 0xf6, 0xf1, 0xe8, 0x77, 0x0b,
	0xf6, 0xe7, 0xd3, 0xa6, 0x4a, 0x51, 0x28, 0xb4, 0xe3, 0x76, 0x0c, 0xbd, 0xfa, 0x68, 0x76, 0x99,
	0x66, 0xce, 0x1c, 0xa2, 0x36, 0x65, 0x4e, 0x57, 0xdb, 0x78, 0xa4, 0x2b, 0x9e, 0x35, 0x93, 0xd5,
	0x25, 0x76, 0x41, 0x88, 0x9d, 0xc1, 0x33, 0xfa, 0x3e, 0x81, 0x98, 0xa1, 0x0c, 0x12, 0x29, 0xaa,
	0x22, 0x6e, 0xe6, 0x69, 0x87, 0x84, 0x9b, 0x19, 0xca, 0x2f, 0x84, 0xcf, 0xde, 0x81, 0xb3, 0x70,
	0x5a, 0xd6, 0x85, 0xcd, 0xef, 0xa3, 0xaf, 0xa3, 0x9b, 0xbb, 0x51, 0xff, 0x09, 0x73, 0xa0, 0x73,
	0xe3, 0x0f, 0x47, 0x77, 0x17, 0xb7, 0xc3, 0x71, 0xbf, 0xc5, 0x36, 0xa1, 0x7d, 0xf5, 0x79, 0xd8,
	0x5f, 0x3b, 0xcf, 0xc0, 0xb1, 0x07, 0xa2, 0xde, 0xd8, 0x4f, 0xd8, 0x5d, 0x00, 0xcd, 0x05, 0x64,
	0x07, 0xf3, 0x52, 0x56, 0xdf, 0xb2, 0x17, 0x87, 0xab, 0x1c, 0x0b, 0xcd, 0x7c, 0xfa, 0xf8, 0xe3,
	0x43, 0x92, 0xea, 0x69, 0x15, 0x0e, 0x22, 0x91, 0x7b, 0x45, 0x1a, 0x4d, 0x45, 0xc6, 0x55, 0x58,
	0x15, 0x85, 0x97, 0x73, 0xa5, 0x51, 0x2a, 0x4f, 0xc9, 0xc8, 0xbb, 0x47, 0x1d, 0x4d, 0x2f, 0xb9,
	0xe6, 0x0b, 0xb7, 0x3f, 0xdc, 0xa0, 0x9f, 0xb7, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x2a, 0x3d,
	0xf9, 0x31, 0x1d, 0x04, 0x00, 0x00,
}
